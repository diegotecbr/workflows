name: Dynamic App Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Permite execução manual

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checar código
        uses: actions/checkout@v4

      - name: Identificar mudanças
        id: check
        run: |
          git fetch --prune --unshallow
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "Arquivos alterados:"
          echo "$CHANGED_FILES"

          APPS=()
          if echo "$CHANGED_FILES" | grep -q "^app1/"; then
            APPS+=('{"name":"app1"}')
          fi
          if echo "$CHANGED_FILES" | grep -q "^app2/"; then
            APPS+=('{"name":"app2"}')
          fi

          MATRIX="{\"include\":[$(IFS=,; echo "${APPS[*]}")]}"
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

      - name: Debug
        run: |
          ${{ fromJson(steps.check.outputs.matrix) }}

  deploy-apps:
    needs: 
      - detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    steps:
      - name: Debug Matrix
        run: |
          echo "Matriz de execução: ${{ matrix }}"
      
      - name: Deploy ${{ matrix.name }}
        run: |
          echo "Fazendo deploy da ${{ matrix.name }}..."
          if [ "${{ matrix.name }}" == "app2" ]; then
            echo "Simulando erro no deploy de app2"
            exit 1
          fi
